{"version":3,"file":"static/js/371.868e859d.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs","../node_modules/graphql-tag/src/index.ts","../node_modules/react-vanilla-tilt/dist.js","../node_modules/@apollo/src/react/hooks/useSyncExternalStore.ts","../node_modules/@apollo/src/react/parser/index.ts","../node_modules/@apollo/src/react/hooks/useQuery.ts","../node_modules/@apollo/src/react/hooks/useApolloClient.ts"],"sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n\n    if (!size) {\n      return globalStyles;\n    }\n\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      } // Keep 7 significant numbers.\n\n\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      } // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    } // No need for a media query for the first size.\n\n\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\n\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\n\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  } // in case of object `spacing`\n\n\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = []; // in case of grid item\n\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  } // in case of object `spacing`\n\n\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = []; // in case of grid item\n\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // columns set with default breakpoint unit of 12\n\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n\n  const otherFiltered = _extends({}, other);\n\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","import { parse } from 'graphql';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  Location,\n} from 'graphql/language/ast';\n\n// A map docString -> graphql document\nconst docCache = new Map<string, DocumentNode>();\n\n// A map fragmentName -> [normalized source]\nconst fragmentSourceMap = new Map<string, Set<string>>();\n\nlet printFragmentWarnings = true;\nlet experimentalFragmentVariables = false;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string: string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\nfunction cacheKeyFromLoc(loc: Location) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nfunction processFragments(ast: DocumentNode) {\n  const seenKeys = new Set<string>();\n  const definitions: DefinitionNode[] = [];\n\n  ast.definitions.forEach(fragmentDefinition => {\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc!);\n\n      // We know something about this fragment\n      let sourceKeySet = fragmentSourceMap.get(fragmentName)!;\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n      }\n\n      sourceKeySet.add(sourceKey);\n\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n\n  return {\n    ...ast,\n    definitions,\n  };\n}\n\nfunction stripLoc(doc: DocumentNode) {\n  const workSet = new Set<Record<string, any>>(doc.definitions);\n\n  workSet.forEach(node => {\n    if (node.loc) delete node.loc;\n    Object.keys(node).forEach(key => {\n      const value = node[key];\n      if (value && typeof value === 'object') {\n        workSet.add(value);\n      }\n    });\n  });\n\n  const loc = doc.loc as Record<string, any>;\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n\n  return doc;\n}\n\nfunction parseDocument(source: string) {\n  var cacheKey = normalize(source);\n  if (!docCache.has(cacheKey)) {\n    const parsed = parse(source, {\n      experimentalFragmentVariables,\n      allowLegacyFragmentVariables: experimentalFragmentVariables,\n    } as any);\n    if (!parsed || parsed.kind !== 'Document') {\n      throw new Error('Not a valid GraphQL document.');\n    }\n    docCache.set(\n      cacheKey,\n      // check that all \"new\" fragments inside the documents are consistent with\n      // existing fragments of the same name\n      stripLoc(processFragments(parsed)),\n    );\n  }\n  return docCache.get(cacheKey)!;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nexport function gql(\n  literals: string | readonly string[],\n  ...args: any[]\n) {\n\n  if (typeof literals === 'string') {\n    literals = [literals];\n  }\n\n  let result = literals[0];\n\n  args.forEach((arg, i) => {\n    if (arg && arg.kind === 'Document') {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n    result += literals[i + 1];\n  });\n\n  return parseDocument(result);\n}\n\nexport function resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\n\nexport function disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nexport function enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nexport function disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\nconst extras = {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n};\n\nexport namespace gql {\n  export const {\n    gql,\n    resetCaches,\n    disableFragmentWarnings,\n    enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables,\n  } = extras;\n}\n\ngql.default = gql;\n\nexport default gql;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction VanillaTilt(element) {\n  this.width = null;\n  this.height = null;\n  this.left = null;\n  this.top = null;\n  this.transitionTimeout = null;\n  this.updateCall = null;\n\n  this.updateBind = this.update.bind(this);\n  this.resetBind = this.reset.bind(this);\n\n  this.element = element;\n\n  this.settings = this.getSettings();\n\n  this.element.style.boxShadow = this.getShadow(this.settings);\n\n  this.reverse = this.settings.reverse ? -1 : 1;\n\n  this.addEventListeners();\n}\n\nVanillaTilt.prototype.getShadow = function getShadow(settings, values) {\n  if (!values) values = { percentageX: 50, percentageY: 50 };\n  var shadow = this.settings.shadow;\n\n  return shadow.color + ' ' + (shadow.x.min + 0.01 * values.percentageX * (shadow.x.max - shadow.x.min)) + 'px ' + (shadow.y.min + 0.01 * values.percentageY * (shadow.y.max - shadow.y.min)) + 'px ' + shadow.spread + 'px';\n};\n\nVanillaTilt.prototype.isSettingTrue = function isSettingTrue(setting) {\n  return setting === '' || setting === true || setting === 1;\n};\n\nVanillaTilt.prototype.addEventListeners = function addEventListeners() {\n  this.onMouseEnterBind = this.onMouseEnter.bind(this);\n  this.onMouseMoveBind = this.onMouseMove.bind(this);\n  this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n\n  this.element.addEventListener('mouseenter', this.onMouseEnterBind);\n  this.element.addEventListener('mousemove', this.onMouseMoveBind);\n  this.element.addEventListener('mouseleave', this.onMouseLeaveBind);\n};\n\nVanillaTilt.prototype.removeEventListeners = function removeEventListeners() {\n  this.element.removeEventListener('mouseenter', this.onMouseEnterBind);\n  this.element.removeEventListener('mousemove', this.onMouseMoveBind);\n  this.element.removeEventListener('mouseleave', this.onMouseLeaveBind);\n};\n\nVanillaTilt.prototype.destroy = function destroy() {\n  clearTimeout(this.transitionTimeout);\n  if (this.updateCall !== null) cancelAnimationFrame(this.updateCall);\n\n  this.reset();\n\n  this.removeEventListeners();\n  this.element.vanillaTilt = null;\n  delete this.element.vanillaTilt;\n\n  this.element = null;\n};\n\nVanillaTilt.prototype.onMouseEnter = function onMouseEnter(event) {\n  this.updateElementPosition();\n  this.element.style.willChange = 'transform';\n  this.setTransition();\n};\n\nVanillaTilt.prototype.onMouseMove = function onMouseMove(event) {\n  if (this.updateCall !== null) {\n    cancelAnimationFrame(this.updateCall);\n  }\n\n  this.event = event;\n  this.updateCall = requestAnimationFrame(this.updateBind);\n};\n\nVanillaTilt.prototype.onMouseLeave = function onMouseLeave(event) {\n  this.setTransition();\n  requestAnimationFrame(this.resetBind);\n};\n\nVanillaTilt.prototype.reset = function reset() {\n  this.event = {\n    pageX: this.left + this.width / 2,\n    pageY: this.top + this.height / 2\n  };\n\n  this.element.style.transform = 'perspective(' + this.settings.perspective + 'px) ' + 'rotateX(0deg) ' + 'rotateY(0deg) ' + 'scale3d(1, 1, 1)';\n\n  this.element.style.boxShadow = this.getShadow(this.settings);\n};\n\nVanillaTilt.prototype.getValues = function getValues() {\n  var x = (this.event.clientX - this.left) / this.width;\n  var y = (this.event.clientY - this.top) / this.height;\n\n  x = Math.min(Math.max(x, 0), 1);\n  y = Math.min(Math.max(y, 0), 1);\n\n  var tiltX = (this.reverse * (this.settings.max / 2 - x * this.settings.max)).toFixed(2);\n  var tiltY = (this.reverse * (y * this.settings.max - this.settings.max / 2)).toFixed(2);\n  var angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n\n  return {\n    tiltX: tiltX,\n    tiltY: tiltY,\n    percentageX: x * 100,\n    percentageY: y * 100,\n    angle: angle\n  };\n};\n\nVanillaTilt.prototype.updateElementPosition = function updateElementPosition() {\n  var rect = this.element.getBoundingClientRect();\n\n  this.width = this.element.offsetWidth;\n  this.height = this.element.offsetHeight;\n  this.left = rect.left;\n  this.top = rect.top;\n};\n\nVanillaTilt.prototype.update = function update() {\n  var values = this.getValues();\n\n  this.element.style.transform = 'perspective(' + this.settings.perspective + 'px) ' + 'rotateX(' + (this.settings.axis === 'x' ? 0 : values.tiltY) + 'deg) ' + 'rotateY(' + (this.settings.axis === 'y' ? 0 : values.tiltX) + 'deg) ' + 'scale3d(' + this.settings.scale + ', ' + this.settings.scale + ', ' + this.settings.scale + ')';\n\n  this.element.style.boxShadow = this.getShadow(this.settings, values);\n\n  this.element.dispatchEvent(new CustomEvent('tiltChange', { detail: values }));\n\n  this.updateCall = null;\n};\n\nVanillaTilt.prototype.setTransition = function setTransition() {\n  var _this = this;\n\n  clearTimeout(this.transitionTimeout);\n  this.element.style.transition = this.settings.speed + 'ms ' + this.settings.easing;\n\n  this.transitionTimeout = setTimeout(function () {\n    _this.element.style.transition = '';\n  }, this.settings.speed);\n};\n\nVanillaTilt.prototype.getSettings = function getSettings() {\n  var defaultSettings = {\n    reverse: true,\n    max: 15,\n    perspective: 1000,\n    easing: 'cubic-bezier(.03,.98,.52,.99)',\n    scale: '1',\n    speed: '300',\n    transition: true,\n    axis: null,\n    reset: true,\n    shadow: {\n      color: 'rgba(20, 26, 40, 0.2)',\n      x: { min: -5, max: 5 },\n      y: { min: 3.5, max: 10.5 },\n      spread: 42\n    }\n  };\n\n  return defaultSettings;\n};\n\nVanillaTilt.init = function init(elements, settings) {\n  if (elements instanceof Node) {\n    elements = [elements];\n  }\n\n  if (elements instanceof NodeList) {\n    elements = [].slice.call(elements);\n  }\n\n  if (!(elements instanceof Array)) {\n    return;\n  }\n\n  elements.forEach(function (element) {\n    if (!('vanillaTilt' in element)) {\n      element.vanillaTilt = new VanillaTilt(element, settings);\n    }\n  });\n};\n\nvar cardStyles = {\n  width: '300px',\n  padding: '30px',\n  margin: '10px',\n  background: '#fff',\n  borderRadius: '4px',\n  color: '#364962',\n  fontSize: '16px',\n  lineHeight: 1.6\n};\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  function Card() {\n    _classCallCheck(this, Card);\n\n    return _possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));\n  }\n\n  _createClass(Card, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      VanillaTilt.init(document.querySelectorAll('[data-tilt]'));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var styles = Object.assign({}, cardStyles, this.props.style);\n      return _react2.default.createElement('div', _extends({ 'data-tilt': true, style: styles }, this.props));\n    }\n  }]);\n\n  return Card;\n}(_react2.default.Component);\n\nexports.default = Card;\n","import { invariant } from '../../utilities/globals';\nimport * as React from 'react';\n\nimport { canUseLayoutEffect } from '../../utilities';\n\nlet didWarnUncachedGetSnapshot = false;\n\ntype RealUseSESHookType =\n  // This import depends only on the @types/use-sync-external-store package, not\n  // the actual use-sync-external-store package, which is not installed. It\n  // might be nice to get this type from React 18, but it still needs to work\n  // when only React 17 or earlier is installed.\n  typeof import(\"use-sync-external-store\").useSyncExternalStore;\n\n// Prevent webpack from complaining about our feature detection of the\n// useSyncExternalStore property of the React namespace, which is expected not\n// to exist when using React 17 and earlier, and that's fine.\nconst uSESKey = \"useSyncExternalStore\" as keyof typeof React;\nconst realHook = React[uSESKey] as RealUseSESHookType | undefined;\n\n// Adapted from https://www.npmjs.com/package/use-sync-external-store, with\n// Apollo Client deviations called out by \"// DEVIATION ...\" comments.\n\n// When/if React.useSyncExternalStore is defined, delegate fully to it.\nexport const useSyncExternalStore: RealUseSESHookType = realHook || ((\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n) => {\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (\n    // DEVIATION: Using our own __DEV__ polyfill (from ../../utilities/globals).\n    __DEV__ &&\n    !didWarnUncachedGetSnapshot &&\n    // DEVIATION: Not using Object.is because we know our snapshots will never\n    // be exotic primitive values like NaN, which is !== itself.\n    value !== getSnapshot()\n  ) {\n    didWarnUncachedGetSnapshot = true;\n    // DEVIATION: Using invariant.error instead of console.error directly.\n    invariant.error(\n      'The result of getSnapshot should be cached to avoid an infinite loop',\n    );\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{inst}, forceUpdate] = React.useState({inst: {value, getSnapshot}});\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  if (canUseLayoutEffect) {\n    // DEVIATION: We avoid calling useLayoutEffect when !canUseLayoutEffect,\n    // which may seem like a conditional hook, but this code ends up behaving\n    // unconditionally (one way or the other) because canUseLayoutEffect is\n    // constant.\n    React.useLayoutEffect(() => {\n      Object.assign(inst, { value, getSnapshot });\n      // Whenever getSnapshot or subscribe changes, we need to check in the\n      // commit phase if there was an interleaved mutation. In concurrent mode\n      // this can happen all the time, but even in synchronous mode, an earlier\n      // effect may have mutated the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({inst});\n      }\n    }, [subscribe, value, getSnapshot]);\n  } else {\n    Object.assign(inst, { value, getSnapshot });\n  }\n\n  React.useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({inst});\n    }\n\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(function handleStoreChange() {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({inst});\n      }\n    });\n  }, [subscribe]);\n\n  return value;\n});\n\nfunction checkIfSnapshotChanged<Snapshot>({\n  value,\n  getSnapshot,\n}: {\n  value: Snapshot;\n  getSnapshot: () => Snapshot;\n}): boolean {\n  try {\n    return value !== getSnapshot();\n  } catch {\n    return true;\n  }\n}\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments: DefinitionNode[] = []\n  const queries: DefinitionNode[] = []\n  const mutations: DefinitionNode[] = []\n  const subscriptions: DefinitionNode[] = []\n\n  for (const x of document.definitions) {\n    if (x.kind === 'FragmentDefinition') {\n      fragments.push(x);\n      continue\n    }\n\n    if (x.kind === 'OperationDefinition') {\n      switch (x.operation) {\n        case 'query':\n          queries.push(x);\n          break;\n        case 'mutation':\n          mutations.push(x);\n          break;\n        case 'subscription':\n          subscriptions.push(x);\n          break;\n      }\n    }\n  }\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n\nexport function verifyDocumentType(document: DocumentNode, type: DocumentType) {\n  const operation = parser(document);\n  const requiredOperationName = operationName(type);\n  const usedOperationName = operationName(operation.type);\n  invariant(\n    operation.type === type,\n    `Running a ${requiredOperationName} requires a graphql ` +\n      `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n  );\n}\n\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useSyncExternalStore } from './useSyncExternalStore';\nimport { equal } from '@wry/equality';\n\nimport { mergeOptions, OperationVariables, WatchQueryFetchPolicy } from '../../core';\nimport { ApolloContextValue, getApolloContext } from '../context';\nimport { ApolloError } from '../../errors';\nimport {\n  ApolloClient,\n  ApolloQueryResult,\n  NetworkStatus,\n  ObservableQuery,\n  DocumentNode,\n  TypedDocumentNode,\n  WatchQueryOptions,\n} from '../../core';\nimport {\n  QueryHookOptions,\n  QueryResult,\n  ObservableQueryFields,\n} from '../types/types';\n\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { useApolloClient } from './useApolloClient';\nimport { canUseWeakMap, canUseWeakSet, compact, isNonEmptyArray, maybeDeepFreeze } from '../../utilities';\n\nconst {\n  prototype: {\n    hasOwnProperty,\n  },\n} = Object;\n\nexport function useQuery<\n  TData = any,\n  TVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<TData, TVariables> = Object.create(null),\n): QueryResult<TData, TVariables> {\n  return useInternalState(\n    useApolloClient(options.client),\n    query,\n  ).useQuery(options);\n}\n\nexport function useInternalState<TData, TVariables>(\n  client: ApolloClient<any>,\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n): InternalState<TData, TVariables> {\n  const stateRef = useRef<InternalState<TData, TVariables>>();\n  if (\n    !stateRef.current ||\n    client !== stateRef.current.client ||\n    query !== stateRef.current.query\n  ) {\n    stateRef.current = new InternalState(client, query, stateRef.current);\n  }\n  const state = stateRef.current;\n\n  // By default, InternalState.prototype.forceUpdate is an empty function, but\n  // we replace it here (before anyone has had a chance to see this state yet)\n  // with a function that unconditionally forces an update, using the latest\n  // setTick function. Updating this state by calling state.forceUpdate is the\n  // only way we trigger React component updates (no other useState calls within\n  // the InternalState class).\n  const [_tick, setTick] = useState(0);\n  state.forceUpdate = () => {\n    setTick(tick => tick + 1);\n  };\n\n  return state;\n}\n\nclass InternalState<TData, TVariables> {\n  constructor(\n    public readonly client: ReturnType<typeof useApolloClient>,\n    public readonly query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n    previous?: InternalState<TData, TVariables>,\n  ) {\n    verifyDocumentType(query, DocumentType.Query);\n\n    // Reuse previousData from previous InternalState (if any) to provide\n    // continuity of previousData even if/when the query or client changes.\n    const previousResult = previous && previous.result;\n    const previousData = previousResult && previousResult.data;\n    if (previousData) {\n      this.previousData = previousData;\n    }\n  }\n\n  forceUpdate() {\n    // Replaced (in useInternalState) with a method that triggers an update.\n    invariant.warn(\"Calling default no-op implementation of InternalState#forceUpdate\");\n  }\n\n  asyncUpdate() {\n    return new Promise<QueryResult<TData, TVariables>>(resolve => {\n      this.asyncResolveFns.add(resolve);\n      this.optionsToIgnoreOnce.add(this.watchQueryOptions);\n      this.forceUpdate();\n    });\n  }\n\n  private asyncResolveFns = new Set<\n    (result: QueryResult<TData, TVariables>) => void\n  >();\n\n  private optionsToIgnoreOnce = new (canUseWeakSet ? WeakSet : Set)<\n    WatchQueryOptions<TVariables, TData>\n  >();\n\n  // Methods beginning with use- should be called according to the standard\n  // rules of React hooks: only at the top level of the calling function, and\n  // without any dynamic conditional logic.\n  useQuery(options: QueryHookOptions<TData, TVariables>) {\n    // The renderPromises field gets initialized here in the useQuery method, at\n    // the beginning of everything (for a given component rendering, at least),\n    // so we can safely use this.renderPromises in other/later InternalState\n    // methods without worrying it might be uninitialized. Even after\n    // initialization, this.renderPromises is usually undefined (unless SSR is\n    // happening), but that's fine as long as it has been initialized that way,\n    // rather than left uninitialized.\n    this.renderPromises = useContext(getApolloContext()).renderPromises;\n\n    this.useOptions(options);\n\n    const obsQuery = this.useObservableQuery();\n\n    const result = useSyncExternalStore(\n      useCallback(() => {\n        if (this.renderPromises) {\n          return () => {};\n        }\n\n        const onNext = () => {\n          const previousResult = this.result;\n          // We use `getCurrentResult()` instead of the onNext argument because\n          // the values differ slightly. Specifically, loading results will have\n          // an empty object for data instead of `undefined` for some reason.\n          const result = obsQuery.getCurrentResult();\n          // Make sure we're not attempting to re-render similar results\n          if (\n            previousResult &&\n            previousResult.loading === result.loading &&\n            previousResult.networkStatus === result.networkStatus &&\n            equal(previousResult.data, result.data)\n          ) {\n            return;\n          }\n\n          this.setResult(result);\n        };\n\n        const onError = (error: Error) => {\n          const last = obsQuery[\"last\"];\n          subscription.unsubscribe();\n          // Unfortunately, if `lastError` is set in the current\n          // `observableQuery` when the subscription is re-created,\n          // the subscription will immediately receive the error, which will\n          // cause it to terminate again. To avoid this, we first clear\n          // the last error/result from the `observableQuery` before re-starting\n          // the subscription, and restore it afterwards (so the subscription\n          // has a chance to stay open).\n          try {\n            obsQuery.resetLastResults();\n            subscription = obsQuery.subscribe(onNext, onError);\n          } finally {\n            obsQuery[\"last\"] = last;\n          }\n\n          if (!hasOwnProperty.call(error, 'graphQLErrors')) {\n            // The error is not a GraphQL error\n            throw error;\n          }\n\n          const previousResult = this.result;\n          if (\n            !previousResult ||\n            (previousResult && previousResult.loading) ||\n            !equal(error, previousResult.error)\n          ) {\n            this.setResult({\n              data: (previousResult && previousResult.data) as TData,\n              error: error as ApolloError,\n              loading: false,\n              networkStatus: NetworkStatus.error,\n            });\n          }\n        };\n\n        let subscription = obsQuery.subscribe(onNext, onError);\n\n        return () => subscription.unsubscribe();\n      }, [\n        // We memoize the subscribe function using useCallback and the following\n        // dependency keys, because the subscribe function reference is all that\n        // useSyncExternalStore uses internally as a dependency key for the\n        // useEffect ultimately responsible for the subscription, so we are\n        // effectively passing this dependency array to that useEffect buried\n        // inside useSyncExternalStore, as desired.\n        obsQuery,\n        this.renderPromises,\n        this.client.disableNetworkFetches,\n      ]),\n\n      () => this.getCurrentResult(),\n      () => this.getCurrentResult(),\n    );\n\n    // TODO Remove this method when we remove support for options.partialRefetch.\n    this.unsafeHandlePartialRefetch(result);\n\n    const queryResult = this.toQueryResult(result);\n\n    if (!queryResult.loading && this.asyncResolveFns.size) {\n      this.asyncResolveFns.forEach(resolve => resolve(queryResult));\n      this.asyncResolveFns.clear();\n    }\n\n    return queryResult;\n  }\n\n  // These members (except for renderPromises) are all populated by the\n  // useOptions method, which is called unconditionally at the beginning of the\n  // useQuery method, so we can safely use these members in other/later methods\n  // without worrying they might be uninitialized.\n  private renderPromises: ApolloContextValue[\"renderPromises\"];\n  private queryHookOptions: QueryHookOptions<TData, TVariables>;\n  private watchQueryOptions: WatchQueryOptions<TVariables, TData>;\n\n  private useOptions(\n    options: QueryHookOptions<TData, TVariables>,\n  ) {\n    const watchQueryOptions = this.createWatchQueryOptions(\n      this.queryHookOptions = options,\n    );\n\n    // Update this.watchQueryOptions, but only when they have changed, which\n    // allows us to depend on the referential stability of\n    // this.watchQueryOptions elsewhere.\n    const currentWatchQueryOptions = this.watchQueryOptions;\n\n    // To force this equality test to \"fail,\" thereby reliably triggering\n    // observable.reobserve, add any current WatchQueryOptions object(s) you\n    // want to be ignored to this.optionsToIgnoreOnce. A similar effect could be\n    // achieved by nullifying this.watchQueryOptions so the equality test\n    // immediately fails because currentWatchQueryOptions is null, but this way\n    // we can promise a truthy this.watchQueryOptions at all times.\n    if (\n      this.optionsToIgnoreOnce.has(currentWatchQueryOptions) ||\n      !equal(watchQueryOptions, currentWatchQueryOptions)\n    ) {\n      this.watchQueryOptions = watchQueryOptions;\n\n      if (currentWatchQueryOptions && this.observable) {\n        // As advertised in the -Once of this.optionsToIgnoreOnce, this trick is\n        // only good for one forced execution of observable.reobserve per\n        // ignored WatchQueryOptions object, though it is unlikely we will ever\n        // see this exact currentWatchQueryOptions object again here, since we\n        // just replaced this.watchQueryOptions with watchQueryOptions.\n        this.optionsToIgnoreOnce.delete(currentWatchQueryOptions);\n\n        // Though it might be tempting to postpone this reobserve call to the\n        // useEffect block, we need getCurrentResult to return an appropriate\n        // loading:true result synchronously (later within the same call to\n        // useQuery). Since we already have this.observable here (not true for\n        // the very first call to useQuery), we are not initiating any new\n        // subscriptions, though it does feel less than ideal that reobserve\n        // (potentially) kicks off a network request (for example, when the\n        // variables have changed), which is technically a side-effect.\n        this.observable.reobserve(this.getObsQueryOptions());\n\n        // Make sure getCurrentResult returns a fresh ApolloQueryResult<TData>,\n        // but save the current data as this.previousData, just like setResult\n        // usually does.\n        this.previousData = this.result?.data || this.previousData;\n        this.result = void 0;\n      }\n    }\n\n    // Make sure state.onCompleted and state.onError always reflect the latest\n    // options.onCompleted and options.onError callbacks provided to useQuery,\n    // since those functions are often recreated every time useQuery is called.\n    // Like the forceUpdate method, the versions of these methods inherited from\n    // InternalState.prototype are empty no-ops, but we can override them on the\n    // base state object (without modifying the prototype).\n    this.onCompleted = options.onCompleted || InternalState.prototype.onCompleted;\n    this.onError = options.onError || InternalState.prototype.onError;\n\n    if (\n      (this.renderPromises || this.client.disableNetworkFetches) &&\n      this.queryHookOptions.ssr === false &&\n      !this.queryHookOptions.skip\n    ) {\n      // If SSR has been explicitly disabled, and this function has been called\n      // on the server side, return the default loading state.\n      this.result = this.ssrDisabledResult;\n    } else if (\n      this.queryHookOptions.skip ||\n      this.watchQueryOptions.fetchPolicy === 'standby'\n    ) {\n      // When skipping a query (ie. we're not querying for data but still want to\n      // render children), make sure the `data` is cleared out and `loading` is\n      // set to `false` (since we aren't loading anything).\n      //\n      // NOTE: We no longer think this is the correct behavior. Skipping should\n      // not automatically set `data` to `undefined`, but instead leave the\n      // previous data in place. In other words, skipping should not mandate that\n      // previously received data is all of a sudden removed. Unfortunately,\n      // changing this is breaking, so we'll have to wait until Apollo Client 4.0\n      // to address this.\n      this.result = this.skipStandbyResult;\n    } else if (\n      this.result === this.ssrDisabledResult ||\n      this.result === this.skipStandbyResult\n    ) {\n      this.result = void 0;\n    }\n  }\n\n  private getObsQueryOptions(): WatchQueryOptions<TVariables, TData> {\n    const toMerge: Array<\n      Partial<WatchQueryOptions<TVariables, TData>>\n    > = [];\n\n    const globalDefaults = this.client.defaultOptions.watchQuery;\n    if (globalDefaults) toMerge.push(globalDefaults);\n\n    if (this.queryHookOptions.defaultOptions) {\n      toMerge.push(this.queryHookOptions.defaultOptions);\n    }\n\n    // We use compact rather than mergeOptions for this part of the merge,\n    // because we want watchQueryOptions.variables (if defined) to replace\n    // this.observable.options.variables whole. This replacement allows\n    // removing variables by removing them from the variables input to\n    // useQuery. If the variables were always merged together (rather than\n    // replaced), there would be no way to remove existing variables.\n    // However, the variables from options.defaultOptions and globalDefaults\n    // (if provided) should be merged, to ensure individual defaulted\n    // variables always have values, if not otherwise defined in\n    // observable.options or watchQueryOptions.\n    toMerge.push(compact(\n      this.observable && this.observable.options,\n      this.watchQueryOptions,\n    ));\n\n    return toMerge.reduce(\n      mergeOptions\n    ) as WatchQueryOptions<TVariables, TData>;\n  }\n\n  private ssrDisabledResult = maybeDeepFreeze({\n    loading: true,\n    data: void 0 as unknown as TData,\n    error: void 0,\n    networkStatus: NetworkStatus.loading,\n  });\n\n  private skipStandbyResult = maybeDeepFreeze({\n    loading: false,\n    data: void 0 as unknown as TData,\n    error: void 0,\n    networkStatus: NetworkStatus.ready,\n  });\n\n  // A function to massage options before passing them to ObservableQuery.\n  private createWatchQueryOptions({\n    skip,\n    ssr,\n    onCompleted,\n    onError,\n    defaultOptions,\n    // The above options are useQuery-specific, so this ...otherOptions spread\n    // makes otherOptions almost a WatchQueryOptions object, except for the\n    // query property that we add below.\n    ...otherOptions\n  }: QueryHookOptions<TData, TVariables> = {}): WatchQueryOptions<TVariables, TData> {\n    // This Object.assign is safe because otherOptions is a fresh ...rest object\n    // that did not exist until just now, so modifications are still allowed.\n    const watchQueryOptions: WatchQueryOptions<TVariables, TData> =\n      Object.assign(otherOptions, { query: this.query });\n\n    if (\n      this.renderPromises &&\n      (\n        watchQueryOptions.fetchPolicy === 'network-only' ||\n        watchQueryOptions.fetchPolicy === 'cache-and-network'\n      )\n    ) {\n      // this behavior was added to react-apollo without explanation in this PR\n      // https://github.com/apollographql/react-apollo/pull/1579\n      watchQueryOptions.fetchPolicy = 'cache-first';\n    }\n\n    if (!watchQueryOptions.variables) {\n      watchQueryOptions.variables = {} as TVariables;\n    }\n\n    if (skip) {\n      const {\n        fetchPolicy = this.getDefaultFetchPolicy(),\n        initialFetchPolicy = fetchPolicy,\n      } = watchQueryOptions;\n\n      // When skipping, we set watchQueryOptions.fetchPolicy initially to\n      // \"standby\", but we also need/want to preserve the initial non-standby\n      // fetchPolicy that would have been used if not skipping.\n      Object.assign(watchQueryOptions, {\n        initialFetchPolicy,\n        fetchPolicy: 'standby',\n      });\n    } else if (!watchQueryOptions.fetchPolicy) {\n      watchQueryOptions.fetchPolicy =\n        this.observable?.options.initialFetchPolicy ||\n        this.getDefaultFetchPolicy();\n    }\n\n    return watchQueryOptions;\n  }\n\n  getDefaultFetchPolicy(): WatchQueryFetchPolicy {\n    return (\n      this.queryHookOptions.defaultOptions?.fetchPolicy ||\n      this.client.defaultOptions.watchQuery?.fetchPolicy ||\n      \"cache-first\"\n    );\n  }\n\n  // Defining these methods as no-ops on the prototype allows us to call\n  // state.onCompleted and/or state.onError without worrying about whether a\n  // callback was provided.\n  private onCompleted(data: TData) {}\n  private onError(error: ApolloError) {}\n\n  private observable: ObservableQuery<TData, TVariables>;\n  private obsQueryFields: Omit<\n    ObservableQueryFields<TData, TVariables>,\n    \"variables\"\n  >;\n\n  private useObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    const obsQuery = this.observable =\n      this.renderPromises\n        && this.renderPromises.getSSRObservable(this.watchQueryOptions)\n        || this.observable // Reuse this.observable if possible (and not SSR)\n        || this.client.watchQuery(this.getObsQueryOptions());\n\n    this.obsQueryFields = useMemo(() => ({\n      refetch: obsQuery.refetch.bind(obsQuery),\n      reobserve: obsQuery.reobserve.bind(obsQuery),\n      fetchMore: obsQuery.fetchMore.bind(obsQuery),\n      updateQuery: obsQuery.updateQuery.bind(obsQuery),\n      startPolling: obsQuery.startPolling.bind(obsQuery),\n      stopPolling: obsQuery.stopPolling.bind(obsQuery),\n      subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n    }), [obsQuery]);\n\n    const ssrAllowed = !(\n      this.queryHookOptions.ssr === false ||\n      this.queryHookOptions.skip\n    );\n\n    if (this.renderPromises && ssrAllowed) {\n      this.renderPromises.registerSSRObservable(obsQuery);\n\n      if (obsQuery.getCurrentResult().loading) {\n        // TODO: This is a legacy API which could probably be cleaned up\n        this.renderPromises.addObservableQueryPromise(obsQuery);\n      }\n    }\n\n    return obsQuery;\n  }\n\n  // These members are populated by getCurrentResult and setResult, and it's\n  // okay/normal for them to be initially undefined.\n  private result: undefined | ApolloQueryResult<TData>;\n  private previousData: undefined | TData;\n\n  private setResult(nextResult: ApolloQueryResult<TData>) {\n    const previousResult = this.result;\n    if (previousResult && previousResult.data) {\n      this.previousData = previousResult.data;\n    }\n    this.result = nextResult;\n    // Calling state.setResult always triggers an update, though some call sites\n    // perform additional equality checks before committing to an update.\n    this.forceUpdate();\n    this.handleErrorOrCompleted(nextResult);\n  }\n\n  private handleErrorOrCompleted(result: ApolloQueryResult<TData>) {\n    if (!result.loading) {\n      // wait a tick in case we are in the middle of rendering a component\n      Promise.resolve().then(() => {\n        if (result.error) {\n          this.onError(result.error);\n        } else if (result.data) {\n          this.onCompleted(result.data);\n        }\n      }).catch(error => {\n        invariant.warn(error);\n      });\n    }\n  }\n\n  private getCurrentResult(): ApolloQueryResult<TData> {\n    // Using this.result as a cache ensures getCurrentResult continues returning\n    // the same (===) result object, unless state.setResult has been called, or\n    // we're doing server rendering and therefore override the result below.\n    if (!this.result) {\n      this.handleErrorOrCompleted(\n        this.result = this.observable.getCurrentResult()\n      );\n    }\n    return this.result;\n  }\n\n  // This cache allows the referential stability of this.result (as returned by\n  // getCurrentResult) to translate into referential stability of the resulting\n  // QueryResult object returned by toQueryResult.\n  private toQueryResultCache = new (canUseWeakMap ? WeakMap : Map)<\n    ApolloQueryResult<TData>,\n    QueryResult<TData, TVariables>\n  >();\n\n  toQueryResult(\n    result: ApolloQueryResult<TData>,\n  ): QueryResult<TData, TVariables> {\n    let queryResult = this.toQueryResultCache.get(result);\n    if (queryResult) return queryResult;\n\n    const { data, partial, ...resultWithoutPartial } = result;\n    this.toQueryResultCache.set(result, queryResult = {\n      data, // Ensure always defined, even if result.data is missing.\n      ...resultWithoutPartial,\n      ...this.obsQueryFields,\n      client: this.client,\n      observable: this.observable,\n      variables: this.observable.variables,\n      called: !this.queryHookOptions.skip,\n      previousData: this.previousData,\n    });\n\n    if (!queryResult.error && isNonEmptyArray(result.errors)) {\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      // TODO: Is it possible for both result.error and result.errors to be\n      // defined here?\n      queryResult.error = new ApolloError({ graphQLErrors: result.errors });\n    }\n\n    return queryResult;\n  }\n\n  private unsafeHandlePartialRefetch(result: ApolloQueryResult<TData>) {\n    // WARNING: SIDE-EFFECTS IN THE RENDER FUNCTION\n    //\n    // TODO: This code should be removed when the partialRefetch option is\n    // removed. I was unable to get this hook to behave reasonably in certain\n    // edge cases when this block was put in an effect.\n    if (\n      result.partial &&\n      this.queryHookOptions.partialRefetch &&\n      !result.loading &&\n      (!result.data || Object.keys(result.data).length === 0) &&\n      this.observable.options.fetchPolicy !== 'cache-only'\n    ) {\n      Object.assign(result, {\n        loading: true,\n        networkStatus: NetworkStatus.refetch,\n      });\n      this.observable.refetch();\n    }\n  }\n}\n","import { invariant } from '../../utilities/globals';\nimport { useContext } from 'react';\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useApolloClient(\n  override?: ApolloClient<object>,\n): ApolloClient<object> {\n  const context = useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n    'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' +\n    'instance in via options.',\n  );\n\n  return client;\n}\n"],"names":["React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","map","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","_extends","boxSizing","display","flexWrap","width","margin","minWidth","theme","directionValues","resolveBreakpointValues","handleBreakpoints","propValue","output","flexDirection","gridClasses","maxWidth","rowSpacing","zeroValueBreakpointKeys","rowSpacingValues","_zeroValueBreakpointK","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","undefined","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","className","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","GridContext","breakpointsValues","otherFiltered","_jsx","children","clsx","as","createStyled","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","apply","instance","Function","bind","setPrototypeOf","prototype","arguments","_wrapNativeSuper","_cache","Map","fn","toString","call","TypeError","has","get","set","Wrapper","getPrototypeOf","this","constructor","create","enumerable","writable","configurable","isObjectLike","invariant","condition","message","Boolean","Error","LineRegExp","getLocation","source","position","lastLineStart","line","body","matchAll","match","index","length","column","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","padStart","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","split","locationLine","subLineIndex","floor","subLineColumnNum","subLines","i","printPrefixedLines","subLine","existingLines","filter","padLen","max","prefix","join","toNormalizedOptions","firstArg","nodes","positions","path","originalError","extensions","GraphQLError","_this$nodes","_nodeLocations$","_ref","rawArgs","undefinedIfEmpty","Array","isArray","nodeLocations","node","loc","locations","pos","originalExtensions","defineProperties","stack","defineProperty","captureStackTrace","formattedError","Symbol","toStringTag","array","syntaxError","description","DirectiveLocation","TokenKind","Lexer","startOfFileToken","Token","lastToken","token","lineStart","lookahead","kind","next","nextToken","readNextToken","end","prev","isUnicodeScalarValue","code","isSupplementaryCodePoint","isLeadingSurrogate","charCodeAt","isTrailingSurrogate","printCodePointAt","lexer","codePointAt","char","fromCodePoint","toUpperCase","createToken","col","bodyLength","readComment","readBlockString","readString","isDigit","readNumber","isNameStart","readName","firstCode","isFloat","readDigits","chunkStart","escape","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","point","readHexDigit","read16BitHexCode","trailingCode","currentLine","blockLines","dedentBlockStringLines","isNameContinue","Parser","options","sourceObj","isSource","Source","_lexer","_options","_tokenCounter","expectToken","Kind","definitions","many","parseDefinition","peek","parseOperationDefinition","hasDescription","peekDescription","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseFragmentDefinition","parseTypeSystemExtension","unexpected","operation","OperationTypeNode","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseName","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","type","parseTypeReference","defaultValue","expectOptionalToken","parseConstValueLiteral","parseConstDirectives","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","parseValueLiteral","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","allowLegacyFragmentVariables","parseList","parseObject","advanceLexer","parseStringLiteral","varName","block","any","fields","parseObjectField","parseDirective","innerType","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","delimitedMany","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","types","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseEnumValueName","getTokenDesc","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","hasOwnProperty","startToken","noLocation","Location","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","maxTokens","advance","isPunctuatorTokenKind","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","normalize","string","trim","processFragments","ast","seenKeys","Set","fragmentDefinition","fragmentName","sourceKey","substring","sourceKeySet","console","warn","add","parseDocument","cacheKey","parsed","doc","workSet","endToken","stripLoc","gql","literals","result","arg","gql_1","extras","clear","obj","target","_createClass","descriptor","Constructor","protoProps","staticProps","_react","require","_react2","__esModule","default","_classCallCheck","_possibleConstructorReturn","self","ReferenceError","VanillaTilt","element","height","left","top","transitionTimeout","updateCall","updateBind","update","resetBind","reset","settings","getSettings","style","boxShadow","getShadow","reverse","addEventListeners","percentageX","percentageY","shadow","color","x","min","y","spread","isSettingTrue","setting","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","addEventListener","removeEventListeners","removeEventListener","destroy","clearTimeout","cancelAnimationFrame","vanillaTilt","event","updateElementPosition","willChange","setTransition","requestAnimationFrame","pageX","pageY","transform","perspective","getValues","clientX","clientY","tiltX","toFixed","tiltY","angle","atan2","PI","rect","getBoundingClientRect","offsetWidth","offsetHeight","axis","scale","dispatchEvent","CustomEvent","detail","_this","transition","speed","easing","setTimeout","init","elements","Node","NodeList","cardStyles","padding","background","borderRadius","fontSize","lineHeight","Card","_React$Component","__proto__","subClass","superClass","_inherits","document","querySelectorAll","createElement","Component","exports","didWarnUncachedGetSnapshot","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","__DEV__","inst","forceUpdate","canUseLayoutEffect","checkIfSnapshotChanged","_a","DocumentType","cache","operationName","Query","Mutation","Subscription","verifyDocumentType","variables","cached","concat","fragments","queries","mutations","subscriptions","_i","definition","payload","requiredOperationName","useQuery","query","client","stateRef","useRef","current","InternalState","state","useState","setTick","tick","useInternalState","override","context","useContext","getApolloContext","useApolloClient","previous","asyncResolveFns","optionsToIgnoreOnce","canUseWeakSet","WeakSet","ssrDisabledResult","maybeDeepFreeze","loading","data","error","networkStatus","NetworkStatus","skipStandbyResult","toQueryResultCache","canUseWeakMap","WeakMap","previousResult","previousData","Promise","resolve","watchQueryOptions","renderPromises","useOptions","obsQuery","useObservableQuery","useCallback","onNext","getCurrentResult","equal","setResult","subscription","onError","last","unsubscribe","resetLastResults","disableNetworkFetches","unsafeHandlePartialRefetch","queryResult","toQueryResult","createWatchQueryOptions","queryHookOptions","currentWatchQueryOptions","observable","delete","reobserve","getObsQueryOptions","onCompleted","ssr","skip","fetchPolicy","toMerge","globalDefaults","defaultOptions","watchQuery","compact","mergeOptions","otherOptions","getDefaultFetchPolicy","_c","_d","initialFetchPolicy","_b","getSSRObservable","obsQueryFields","useMemo","refetch","fetchMore","updateQuery","startPolling","stopPolling","subscribeToMore","ssrAllowed","registerSSRObservable","addObservableQueryPromise","nextResult","handleErrorOrCompleted","then","catch","resultWithoutPartial","called","isNonEmptyArray","errors","ApolloError","graphQLErrors","partial","partialRefetch"],"sourceRoot":""}